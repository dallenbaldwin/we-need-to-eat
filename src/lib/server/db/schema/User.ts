import { sqliteTable, int, text, blob } from 'drizzle-orm/sqlite-core'

export const users = sqliteTable('users', {
  /**
   * generated by lucia
   *
   * @see https://lucia-auth.com/basics/users/
   */
  id: text('id').primaryKey(),
  username: text('username').notNull(),
  admin: int('admin', { mode: 'boolean' }).notNull().default(false),
})
/** @see {@link users} */
export type User = typeof users.$inferSelect
/** @see {@link users} */
export type InsertUser = typeof users.$inferInsert

/** @see https://lucia-auth.com/guidebook/drizzle-orm/ */
export const userKeys = sqliteTable('userKeys', {
  id: text('id').primaryKey(),
  /** @see {@link User} */
  userId: text('user_id')
    .notNull()
    .references(() => users.id),
  hashedPassword: text('hashed_password'),
})
/** @see {@link userKeys} */
export type UserKey = typeof userKeys.$inferSelect
/** @see {@link userKeys} */
export type InsertUserKey = typeof userKeys.$inferInsert

/** @see https://lucia-auth.com/guidebook/drizzle-orm/ */
export const userSessions = sqliteTable('userSessions', {
  id: text('id').primaryKey(),
  /** @see {@link User} */
  userId: text('user_id')
    .notNull()
    .references(() => users.id),
  activeExpires: blob('active_expires', { mode: 'bigint' }).notNull(),
  idleExpires: blob('idle_expires', { mode: 'bigint' }).notNull(),
})
/** @see {@link userSessions} */
export type UserSession = typeof userSessions.$inferSelect
/** @see {@link userSessions} */
export type InsertUserSession = typeof userSessions.$inferInsert
